// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "mysql"
url      = env("DATABASE_URL")
}

model Users {
userId   Int       @id @default(autoincrement()) @map("user_id")
nickname String    @unique @map("nickname")
password String    @map("password")
userType User_Type @default(CUSTOMER) @map("user_type")

createdAt DateTime @default(now()) @map("createdAt")
updatedAt DateTime @updatedAt @map("updatedAt")

Categories Categories[]
Menus Menus[]

@@map("Users")
}

model Categories {
categoryId   Int     @id @default(autoincrement()) @map("category_id")
UserId       Int     @map("User_id")
order        Int     @map("order")
name         String  @map("name")

updatedAt DateTime @updatedAt @map("updatedAt")

Menus Menus[]
User Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)

@@map("Categories")
}

model Menus {
menuId          Int        @id @default(autoincrement()) @map("menu_id")
CategoryId      Int      @map("Category_id")
UserId          Int      @map("User_id")
name            String   @map("menu_name")
order           Int      @map("menu_order")
description     String   @map("description") @db.Text
image           String   @map("menu_image")
price           Int      @map("price")
status          Menu_Status @default(FOR_SALE) @map("status")

updatedAt DateTime @updatedAt @map("updatedAt")

// 카테고리를 외래키로 참조 (메뉴테이블에 있는 category_id를 카테고리테이블에 있는 id로 참조 하고 cascade옵션 추가)
Category Categories @relation(fields: [CategoryId], references: [categoryId], onDelete: Cascade)
User Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)

@@map("Menus")
}

enum Menu_Status {
FOR_SALE
SOLD_OUT
}

enum User_Type {
OWNER
CUSTOMER
}